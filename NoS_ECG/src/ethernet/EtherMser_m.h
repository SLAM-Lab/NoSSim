//
// Generated file, do not edit! Created by opp_msgc 4.3 from ethernet/EtherMser.msg.
//

#ifndef _ETHERMSER_M_H_
#define _ETHERMSER_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "INETDefs.h"

#define ETHERAPP_CLI_SAP  0xf0
#define ETHERAPP_SRV_SAP  0xf1
// }}



/**
 * Class generated from <tt>ethernet/EtherMser.msg</tt> by opp_msgc.
 * <pre>
 * packet EtherMserReq
 * {
 *     long requestId;
 *     long responseBytes;
 *     char fileBuffer[];
 * }
 * </pre>
 */
class EtherMserReq : public ::cPacket
{
  protected:
    long requestId_var;
    long responseBytes_var;
    char *fileBuffer_var; // array ptr
    unsigned int fileBuffer_arraysize;

  private:
    void copy(const EtherMserReq& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EtherMserReq&);

  public:
    EtherMserReq(const char *name=NULL, int kind=0);
    EtherMserReq(const EtherMserReq& other);
    virtual ~EtherMserReq();
    EtherMserReq& operator=(const EtherMserReq& other);
    virtual EtherMserReq *dup() const {return new EtherMserReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getRequestId() const;
    virtual void setRequestId(long requestId);
    virtual long getResponseBytes() const;
    virtual void setResponseBytes(long responseBytes);
    virtual void setFileBufferArraySize(unsigned int size);
    virtual unsigned int getFileBufferArraySize() const;
    virtual char getFileBuffer(unsigned int k) const;
    virtual void setFileBuffer(unsigned int k, char fileBuffer);
};

inline void doPacking(cCommBuffer *b, EtherMserReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, EtherMserReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>ethernet/EtherMser.msg</tt> by opp_msgc.
 * <pre>
 * packet EtherMserResp
 * {
 *     int requestId;
 *     int numFrames;
 *     char fileBuffer[];
 * }
 * </pre>
 */
class EtherMserResp : public ::cPacket
{
  protected:
    int requestId_var;
    int numFrames_var;
    char *fileBuffer_var; // array ptr
    unsigned int fileBuffer_arraysize;

  private:
    void copy(const EtherMserResp& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EtherMserResp&);

  public:
    EtherMserResp(const char *name=NULL, int kind=0);
    EtherMserResp(const EtherMserResp& other);
    virtual ~EtherMserResp();
    EtherMserResp& operator=(const EtherMserResp& other);
    virtual EtherMserResp *dup() const {return new EtherMserResp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getRequestId() const;
    virtual void setRequestId(int requestId);
    virtual int getNumFrames() const;
    virtual void setNumFrames(int numFrames);
    virtual void setFileBufferArraySize(unsigned int size);
    virtual unsigned int getFileBufferArraySize() const;
    virtual char getFileBuffer(unsigned int k) const;
    virtual void setFileBuffer(unsigned int k, char fileBuffer);
};

inline void doPacking(cCommBuffer *b, EtherMserResp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, EtherMserResp& obj) {obj.parsimUnpack(b);}


#endif // _ETHERMSER_M_H_
